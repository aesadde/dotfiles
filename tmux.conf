# ft=bash
OSTYPE="$(uname -s)"
SHELL="$(which zsh)"
##########################################
# #ZSH
# set-option -g default-shell "$(which zsh)"
## Copy-paste integration
set -g default-command "reattach-to-user-namespace -l ${SHELL}"

# Allows for faster key repetition
set -s escape-time 0

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf

# KEY BINDINGS
# C-a = prefix
unbind C-b
set -g prefix C-a

# C-a = last-window
unbind l
bind C-a last-window

# C-c = new-window
bind C-c new-window

# detach
bind d detach

#change color of status line
set -g status-bg colour40
setw -g window-status-current-bg colour40

bind -n S-left  prev
bind -n S-right next
bind -n S-C-left  swap-window -t -1
bind -n S-C-right swap-window -t +1

bind -n M-F11 set -qg status-bg colour25
bind -n M-F12 set -qg status-bg colour40
bind -n S-up \
	send-keys M-F12 \; \
	set -qg status-bg colour25 \; \
	unbind -n S-left \; \
	unbind -n S-right \; \
	unbind -n S-C-left \; \
	unbind -n S-C-right \; \
	unbind -n C-t \; \
	set -qg prefix C-b

bind -n S-down \
	send-keys M-F11 \; \
	set -qg status-bg colour40 \; \
	bind -n S-left  prev \; \
	bind -n S-right next \; \
	bind -n S-C-left swap-window -t -1 \; \
	bind -n S-C-right swap-window -t +1 \; \
	bind -n C-t new-window -a -c "#{pane_current_path}" \; \
	set -qg prefix C-a

# WINDOWS AND PANES
# | = horizontal split
unbind %
bind | split-window -h -c "#{pane_current_path}"

# - = vertical split
unbind '"'
bind - split-window -v -c "#{pane_current_path}"

unbind 'c'
bind c new-window -c "#{pane_current_path}"


####### vim like nav
setw -g  mode-keys vi
bind j select-pane -D
bind k select-pane -U
bind h select-pane -L
bind l select-pane -R
bind-key -r C-h select-window -t :-
bind-key -r C-l select-window -t :+

# resize panes using PREFIX H, J, K, L
bind H resize-pane -L 8
bind J resize-pane -D 8
bind K resize-pane -U 8
bind L resize-pane -R 8

# reload tmux file
unbind r
bind r source-file ~/.tmux.conf

##########################################
# Automatically set window title
set-window-option -g automatic-rename on
set-option -g set-titles on

# BASIC CONFIG
set -g set-clipboard on

# Scroll History
set -g history-limit 30000

# Set ability to capture on start and restore on exit window data when running an application
setw -g alternate-screen on

# vim like copy and paste
unbind p
unbind ]
bind p paste-buffer

unbind -Tcopy-mode-vi Space
unbind -Tcopy-mode-vi C-j
unbind -Tcopy-mode-vi Enter
bind -Tcopy-mode-vi v send -X begin-selection
bind -Tcopy-mode-vi C-v  send -X rectangle-toggle
bind -Tcopy-mode-vi y send -X copy-selection

bind-key -Tcopy-mode-vi Y send -X copy-pipe "pbcopy"
bind-key P run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"
bind-key Y run "tmux save-buffer - | reattach-to-user-namespace pbcopy"

#status
#improve colours
# set-option -ga terminal-overrides ",xterm-256color:Tc"
set-option -g default-terminal "screen-256color"


#soften status bar color from harsh green to light gray
set -g status-bg '#666666'
set -g status-fg '#aaaaaa'

# remove administrative debris (session name, hostname, time) in status bar
set -g status-left ''
set -g status-right ''

# renumber windows sequentially after closing any of them
set -g renumber-windows on

# Status options
set-option -g status on
set-option -g status-interval 1
# set-option -g status-utf8 on
set-option -g status-justify "left"
set-option -g status-left-length 200
set-option -g status-right-length 200


set -g status-left-length 32
set -g status-right-length 150

set -g status-fg white
set -g status-bg colour234
set -g window-status-activity-attr bold
set -g pane-border-fg colour245
set -g pane-active-border-fg colour39
set -g message-fg colour16
set -g message-bg colour221
set -g message-attr bold

set -g status-left '#[fg=colour235,bg=colour252,bold] #S #[fg=colour245,bg=colour238,bold] #(whoami) #[fg=colour238,bg=colour234,nobold]'

set -g window-status-format "#[fg=white,bg=colour234] #I #W-#(pwd)"

set -g window-status-current-format "#[fg=colour234,bg=colour39]#[fg=colour25,bg=colour39,noreverse,bold] #I #W-#(pwd) #[fg=colour39,bg=colour234,nobold]"
set -g status-right '#[fg=colour234,bg=colour39] %d/%m #[fg=colour233,bg=colour8,bold] %H:%M'


# Mouse options
set-option -g mouse on
set -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M
set -wg mouse on

